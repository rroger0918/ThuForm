
@model ThuForm.Models.RegistForm

@{
    ViewBag.Title = "報名表單";
}
<style>
    #labelID{
        width: 20%;
    }
    #labelID2 {
        width: 20%;
    }
    #rookie{
               margin-top:6%;
           }

</style>

<div class="container">
    <div class="row justify-content-around">
        <div class="col-lg-9">

            <h2>報名表單</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*ID屆數*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @id = "labelID", @class = "form-control", placeholder = "第幾屆 ( Num ) ", type = "text" } })
                            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*姓名*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "name", type = "text", id = "fName" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*信箱*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", placeholder = "email" } })
                            @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*報名人數*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @id = "labelID2", @class = "form-control", placeholder = "含自己 ( Num ) " } })
                            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*備註*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Note, new { cols = 70, rows = 10, placeholder = "海鮮素、白肉素、半夜1點到早上7點素、只在民宿打麻將、想夜衝……等等", htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    @*確認參加*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="確定" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }

            @if (ViewBag.Error == true)
            {
                <div class="alert alert-danger">
                    <strong>重複報名！</strong>
                </div>
            }
        </div>
        <div class="col-lg-1" id="rookie">
            @Scripts.Render("https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js")
            <lottie-player src="https://assets7.lottiefiles.com/packages/lf20_6kbjigp3.json" background="transparent" speed="1" style="width: 300px; height: 300px;" loop autoplay></lottie-player>
        </div>
    </div>

</div>

            <script src="~/Scripts/jquery-3.4.1.min.js"></script>
            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
            <script>
                // extend jquery range validator to work for required checkboxes
                var defaultRangeValidator = $.validator.methods.range;
                $.validator.methods.range = function (value, element, param) {
                    if (element.type === 'checkbox') {
                        // if it's a checkbox return true if it is checked
                        return element.checked;
                    } else {
                        // otherwise run the default validation function
                        return defaultRangeValidator.call(this, value, element, param);
                    }
                }
            </script>
